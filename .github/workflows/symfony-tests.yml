name: Symfony

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:${{ env.POSTGRES_VERSION }}
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
    # Setup PHP
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
    - uses: actions/checkout@v4

    # Charger les variables d'environnement du fichier .env.test
    - name: Load environment variables from .env.test
      run: |
        cat .env.test >> $GITHUB_ENV

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    # Attendre que PostgreSQL soit prêt
    - name: Wait for PostgreSQL
      run: |
        dockerize -wait tcp://localhost:5432 -timeout 1m

    # Créer le schéma de la base de données
    - name: Create Database Schema
      run: php bin/console doctrine:schema:create --env=test

    # Charger les fixtures
    - name: Load Fixtures
      run: php bin/console doctrine:fixtures:load --no-interaction --env=test

    # Exécuter les tests PHPUnit
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
      run: vendor/bin/phpunit
